plugins {
    id 'fabric-loom' version '0.8-SNAPSHOT'
    id "com.github.fudge.forgedflowerloom" version "2.0.0"
}

repositories {
    maven { url = "https://maven.terraformersmc.com" }
    maven { url = "https://maven.shedaniel.me/" }
    maven { url = "https://www.cursemaven.com" }
    maven { url = "https://maven.florens.be" }
    maven { url = "https://jitpack.io" } // Leave this as lowest priority
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

sourceSets {
    testmod {
        compileClasspath += main.compileClasspath
        runtimeClasspath += main.runtimeClasspath
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Dependencies
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation("dev.emi:trinkets:${project.trinkets_version}") {
        transitive = false
    }
    modImplementation include("io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cca_version}")
    modImplementation include("io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:${project.cca_version}")
    modImplementation include("io.github.onyxstudios.Cardinal-Components-API:cardinal-components-item:${project.cca_version}")
    modImplementation include("be.florens:expandability-fabric:${project.expandability_version}")
    modImplementation "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}"
    modImplementation("com.terraformersmc:modmenu:${project.mod_menu_version}") {
        transitive = false
    }
    // TODO: api for extra entity attributes: gravity, swimming speed, step height, reach/range
    modImplementation include("com.github.emilyploszaj:step-height-entity-attribute:${project.step_height_attr_version}") {
        transitive = false
    }
    modImplementation "me.shedaniel:RoughlyEnoughItems:${project.rei_version}"

    // Compat
    modCompileOnly("com.github.apace100:origins-fabric:v${project.origins_version}") {
        transitive = false
    }
    modCompileOnly("com.github.williambl:haema:v${project.haema_version}") {
        transitive = false
    }

    include modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	modImplementation("com.terraformersmc:modmenu:${project.mod_menu_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

    // Dev runtime
    testmodImplementation sourceSets.main.output
    modRuntime "be.florens:autoload-fabric:${project.autoload_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"

    // The Minecraft launcher currently installs Java 8 for users, so your mod probably wants to target Java 8 too
    // JDK 9 introduced a new way of specifying this that will make sure no newer classes or methods are used.
    // We'll use that if it's available, but otherwise we'll use the older option.

    it.options.release = 16
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}
